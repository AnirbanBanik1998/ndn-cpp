// Only compile if ndn-cpp-config.h defines NDN_CPP_HAVE_PROTOBUF = 1.
// This will disappear if someone runs protoc again, but then assume we have Protobuf.
#include <ndn-cpp/ndn-cpp-config.h>
#if NDN_CPP_HAVE_PROTOBUF

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control-parameters.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "control-parameters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

namespace {

const ::google::protobuf::Descriptor* ControlParametersTypes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlParametersTypes_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlParametersTypes_Name_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlParametersTypes_Name_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlParametersTypes_Strategy_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlParametersTypes_Strategy_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlParametersTypes_ControlParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlParametersTypes_ControlParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlParametersTypes_ControlParametersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlParametersTypes_ControlParametersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlParametersTypes_ControlParametersMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlParametersTypes_ControlParametersMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlParametersTypes_ControlParametersResponseMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlParametersTypes_ControlParametersResponseMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_control_2dparameters_2eproto() {
  protobuf_AddDesc_control_2dparameters_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "control-parameters.proto");
  GOOGLE_CHECK(file != NULL);
  ControlParametersTypes_descriptor_ = file->message_type(0);
  static const int ControlParametersTypes_offsets_[1] = {
  };
  ControlParametersTypes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ControlParametersTypes_descriptor_,
      ControlParametersTypes::default_instance_,
      ControlParametersTypes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ControlParametersTypes));
  ControlParametersTypes_Name_descriptor_ = ControlParametersTypes_descriptor_->nested_type(0);
  static const int ControlParametersTypes_Name_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_Name, component_),
  };
  ControlParametersTypes_Name_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ControlParametersTypes_Name_descriptor_,
      ControlParametersTypes_Name::default_instance_,
      ControlParametersTypes_Name_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_Name, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_Name, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ControlParametersTypes_Name));
  ControlParametersTypes_Strategy_descriptor_ = ControlParametersTypes_descriptor_->nested_type(1);
  static const int ControlParametersTypes_Strategy_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_Strategy, name_),
  };
  ControlParametersTypes_Strategy_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ControlParametersTypes_Strategy_descriptor_,
      ControlParametersTypes_Strategy::default_instance_,
      ControlParametersTypes_Strategy_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_Strategy, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_Strategy, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ControlParametersTypes_Strategy));
  ControlParametersTypes_ControlParameters_descriptor_ = ControlParametersTypes_descriptor_->nested_type(2);
  static const int ControlParametersTypes_ControlParameters_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, face_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, uri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, local_control_feature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, strategy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, expiration_period_),
  };
  ControlParametersTypes_ControlParameters_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ControlParametersTypes_ControlParameters_descriptor_,
      ControlParametersTypes_ControlParameters::default_instance_,
      ControlParametersTypes_ControlParameters_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParameters, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ControlParametersTypes_ControlParameters));
  ControlParametersTypes_ControlParametersResponse_descriptor_ = ControlParametersTypes_descriptor_->nested_type(3);
  static const int ControlParametersTypes_ControlParametersResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersResponse, status_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersResponse, status_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersResponse, control_parameters_),
  };
  ControlParametersTypes_ControlParametersResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ControlParametersTypes_ControlParametersResponse_descriptor_,
      ControlParametersTypes_ControlParametersResponse::default_instance_,
      ControlParametersTypes_ControlParametersResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ControlParametersTypes_ControlParametersResponse));
  ControlParametersTypes_ControlParametersMessage_descriptor_ = ControlParametersTypes_descriptor_->nested_type(4);
  static const int ControlParametersTypes_ControlParametersMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersMessage, control_parameters_),
  };
  ControlParametersTypes_ControlParametersMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ControlParametersTypes_ControlParametersMessage_descriptor_,
      ControlParametersTypes_ControlParametersMessage::default_instance_,
      ControlParametersTypes_ControlParametersMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ControlParametersTypes_ControlParametersMessage));
  ControlParametersTypes_ControlParametersResponseMessage_descriptor_ = ControlParametersTypes_descriptor_->nested_type(5);
  static const int ControlParametersTypes_ControlParametersResponseMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersResponseMessage, control_response_),
  };
  ControlParametersTypes_ControlParametersResponseMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ControlParametersTypes_ControlParametersResponseMessage_descriptor_,
      ControlParametersTypes_ControlParametersResponseMessage::default_instance_,
      ControlParametersTypes_ControlParametersResponseMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersResponseMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlParametersTypes_ControlParametersResponseMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ControlParametersTypes_ControlParametersResponseMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_control_2dparameters_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ControlParametersTypes_descriptor_, &ControlParametersTypes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ControlParametersTypes_Name_descriptor_, &ControlParametersTypes_Name::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ControlParametersTypes_Strategy_descriptor_, &ControlParametersTypes_Strategy::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ControlParametersTypes_ControlParameters_descriptor_, &ControlParametersTypes_ControlParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ControlParametersTypes_ControlParametersResponse_descriptor_, &ControlParametersTypes_ControlParametersResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ControlParametersTypes_ControlParametersMessage_descriptor_, &ControlParametersTypes_ControlParametersMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ControlParametersTypes_ControlParametersResponseMessage_descriptor_, &ControlParametersTypes_ControlParametersResponseMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_control_2dparameters_2eproto() {
  delete ControlParametersTypes::default_instance_;
  delete ControlParametersTypes_reflection_;
  delete ControlParametersTypes_Name::default_instance_;
  delete ControlParametersTypes_Name_reflection_;
  delete ControlParametersTypes_Strategy::default_instance_;
  delete ControlParametersTypes_Strategy_reflection_;
  delete ControlParametersTypes_ControlParameters::default_instance_;
  delete ControlParametersTypes_ControlParameters_reflection_;
  delete ControlParametersTypes_ControlParametersResponse::default_instance_;
  delete ControlParametersTypes_ControlParametersResponse_reflection_;
  delete ControlParametersTypes_ControlParametersMessage::default_instance_;
  delete ControlParametersTypes_ControlParametersMessage_reflection_;
  delete ControlParametersTypes_ControlParametersResponseMessage::default_instance_;
  delete ControlParametersTypes_ControlParametersResponseMessage_reflection_;
}

void protobuf_AddDesc_control_2dparameters_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030control-parameters.proto\022\013ndn_message\""
    "\221\006\n\026ControlParametersTypes\032\031\n\004Name\022\021\n\tco"
    "mponent\030\010 \003(\014\032B\n\010Strategy\0226\n\004name\030\007 \002(\0132"
    "(.ndn_message.ControlParametersTypes.Nam"
    "e\032\220\002\n\021ControlParameters\0226\n\004name\030\007 \001(\0132(."
    "ndn_message.ControlParametersTypes.Name\022"
    "\017\n\007face_id\030i \001(\004\022\013\n\003uri\030r \001(\t\022\035\n\025local_c"
    "ontrol_feature\030n \001(\004\022\016\n\006origin\030o \001(\004\022\014\n\004"
    "cost\030j \001(\004\022\r\n\005flags\030l \001(\004\022>\n\010strategy\030k "
    "\001(\0132,.ndn_message.ControlParametersTypes"
    ".Strategy\022\031\n\021expiration_period\030m \001(\004\032\230\001\n"
    "\031ControlParametersResponse\022\023\n\013status_cod"
    "e\030f \002(\004\022\023\n\013status_text\030g \002(\t\022Q\n\022control_"
    "parameters\030h \003(\01325.ndn_message.ControlPa"
    "rametersTypes.ControlParameters\032m\n\030Contr"
    "olParametersMessage\022Q\n\022control_parameter"
    "s\030h \002(\01325.ndn_message.ControlParametersT"
    "ypes.ControlParameters\032{\n ControlParamet"
    "ersResponseMessage\022W\n\020control_response\030e"
    " \002(\0132=.ndn_message.ControlParametersType"
    "s.ControlParametersResponse", 827);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "control-parameters.proto", &protobuf_RegisterTypes);
  ControlParametersTypes::default_instance_ = new ControlParametersTypes();
  ControlParametersTypes_Name::default_instance_ = new ControlParametersTypes_Name();
  ControlParametersTypes_Strategy::default_instance_ = new ControlParametersTypes_Strategy();
  ControlParametersTypes_ControlParameters::default_instance_ = new ControlParametersTypes_ControlParameters();
  ControlParametersTypes_ControlParametersResponse::default_instance_ = new ControlParametersTypes_ControlParametersResponse();
  ControlParametersTypes_ControlParametersMessage::default_instance_ = new ControlParametersTypes_ControlParametersMessage();
  ControlParametersTypes_ControlParametersResponseMessage::default_instance_ = new ControlParametersTypes_ControlParametersResponseMessage();
  ControlParametersTypes::default_instance_->InitAsDefaultInstance();
  ControlParametersTypes_Name::default_instance_->InitAsDefaultInstance();
  ControlParametersTypes_Strategy::default_instance_->InitAsDefaultInstance();
  ControlParametersTypes_ControlParameters::default_instance_->InitAsDefaultInstance();
  ControlParametersTypes_ControlParametersResponse::default_instance_->InitAsDefaultInstance();
  ControlParametersTypes_ControlParametersMessage::default_instance_->InitAsDefaultInstance();
  ControlParametersTypes_ControlParametersResponseMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_control_2dparameters_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_control_2dparameters_2eproto {
  StaticDescriptorInitializer_control_2dparameters_2eproto() {
    protobuf_AddDesc_control_2dparameters_2eproto();
  }
} static_descriptor_initializer_control_2dparameters_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ControlParametersTypes_Name::kComponentFieldNumber;
#endif  // !_MSC_VER

ControlParametersTypes_Name::ControlParametersTypes_Name()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ControlParametersTypes_Name::InitAsDefaultInstance() {
}

ControlParametersTypes_Name::ControlParametersTypes_Name(const ControlParametersTypes_Name& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ControlParametersTypes_Name::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControlParametersTypes_Name::~ControlParametersTypes_Name() {
  SharedDtor();
}

void ControlParametersTypes_Name::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ControlParametersTypes_Name::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlParametersTypes_Name::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlParametersTypes_Name_descriptor_;
}

const ControlParametersTypes_Name& ControlParametersTypes_Name::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_control_2dparameters_2eproto();
  return *default_instance_;
}

ControlParametersTypes_Name* ControlParametersTypes_Name::default_instance_ = NULL;

ControlParametersTypes_Name* ControlParametersTypes_Name::New() const {
  return new ControlParametersTypes_Name;
}

void ControlParametersTypes_Name::Clear() {
  component_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ControlParametersTypes_Name::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes component = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_component()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_component;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ControlParametersTypes_Name::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated bytes component = 8;
  for (int i = 0; i < this->component_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->component(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ControlParametersTypes_Name::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated bytes component = 8;
  for (int i = 0; i < this->component_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->component(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ControlParametersTypes_Name::ByteSize() const {
  int total_size = 0;

  // repeated bytes component = 8;
  total_size += 1 * this->component_size();
  for (int i = 0; i < this->component_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->component(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlParametersTypes_Name::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ControlParametersTypes_Name* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ControlParametersTypes_Name*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ControlParametersTypes_Name::MergeFrom(const ControlParametersTypes_Name& from) {
  GOOGLE_CHECK_NE(&from, this);
  component_.MergeFrom(from.component_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ControlParametersTypes_Name::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlParametersTypes_Name::CopyFrom(const ControlParametersTypes_Name& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlParametersTypes_Name::IsInitialized() const {

  return true;
}

void ControlParametersTypes_Name::Swap(ControlParametersTypes_Name* other) {
  if (other != this) {
    component_.Swap(&other->component_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ControlParametersTypes_Name::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlParametersTypes_Name_descriptor_;
  metadata.reflection = ControlParametersTypes_Name_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ControlParametersTypes_Strategy::kNameFieldNumber;
#endif  // !_MSC_VER

ControlParametersTypes_Strategy::ControlParametersTypes_Strategy()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ControlParametersTypes_Strategy::InitAsDefaultInstance() {
  name_ = const_cast< ::ndn_message::ControlParametersTypes_Name*>(&::ndn_message::ControlParametersTypes_Name::default_instance());
}

ControlParametersTypes_Strategy::ControlParametersTypes_Strategy(const ControlParametersTypes_Strategy& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ControlParametersTypes_Strategy::SharedCtor() {
  _cached_size_ = 0;
  name_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControlParametersTypes_Strategy::~ControlParametersTypes_Strategy() {
  SharedDtor();
}

void ControlParametersTypes_Strategy::SharedDtor() {
  if (this != default_instance_) {
    delete name_;
  }
}

void ControlParametersTypes_Strategy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlParametersTypes_Strategy::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlParametersTypes_Strategy_descriptor_;
}

const ControlParametersTypes_Strategy& ControlParametersTypes_Strategy::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_control_2dparameters_2eproto();
  return *default_instance_;
}

ControlParametersTypes_Strategy* ControlParametersTypes_Strategy::default_instance_ = NULL;

ControlParametersTypes_Strategy* ControlParametersTypes_Strategy::New() const {
  return new ControlParametersTypes_Strategy;
}

void ControlParametersTypes_Strategy::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != NULL) name_->::ndn_message::ControlParametersTypes_Name::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ControlParametersTypes_Strategy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ndn_message.ControlParametersTypes.Name name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ControlParametersTypes_Strategy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ndn_message.ControlParametersTypes.Name name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ControlParametersTypes_Strategy::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ndn_message.ControlParametersTypes.Name name = 7;
  if (has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ControlParametersTypes_Strategy::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ndn_message.ControlParametersTypes.Name name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlParametersTypes_Strategy::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ControlParametersTypes_Strategy* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ControlParametersTypes_Strategy*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ControlParametersTypes_Strategy::MergeFrom(const ControlParametersTypes_Strategy& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      mutable_name()->::ndn_message::ControlParametersTypes_Name::MergeFrom(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ControlParametersTypes_Strategy::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlParametersTypes_Strategy::CopyFrom(const ControlParametersTypes_Strategy& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlParametersTypes_Strategy::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ControlParametersTypes_Strategy::Swap(ControlParametersTypes_Strategy* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ControlParametersTypes_Strategy::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlParametersTypes_Strategy_descriptor_;
  metadata.reflection = ControlParametersTypes_Strategy_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ControlParametersTypes_ControlParameters::kNameFieldNumber;
const int ControlParametersTypes_ControlParameters::kFaceIdFieldNumber;
const int ControlParametersTypes_ControlParameters::kUriFieldNumber;
const int ControlParametersTypes_ControlParameters::kLocalControlFeatureFieldNumber;
const int ControlParametersTypes_ControlParameters::kOriginFieldNumber;
const int ControlParametersTypes_ControlParameters::kCostFieldNumber;
const int ControlParametersTypes_ControlParameters::kFlagsFieldNumber;
const int ControlParametersTypes_ControlParameters::kStrategyFieldNumber;
const int ControlParametersTypes_ControlParameters::kExpirationPeriodFieldNumber;
#endif  // !_MSC_VER

ControlParametersTypes_ControlParameters::ControlParametersTypes_ControlParameters()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ControlParametersTypes_ControlParameters::InitAsDefaultInstance() {
  name_ = const_cast< ::ndn_message::ControlParametersTypes_Name*>(&::ndn_message::ControlParametersTypes_Name::default_instance());
  strategy_ = const_cast< ::ndn_message::ControlParametersTypes_Strategy*>(&::ndn_message::ControlParametersTypes_Strategy::default_instance());
}

ControlParametersTypes_ControlParameters::ControlParametersTypes_ControlParameters(const ControlParametersTypes_ControlParameters& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ControlParametersTypes_ControlParameters::SharedCtor() {
  _cached_size_ = 0;
  name_ = NULL;
  face_id_ = GOOGLE_ULONGLONG(0);
  uri_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  local_control_feature_ = GOOGLE_ULONGLONG(0);
  origin_ = GOOGLE_ULONGLONG(0);
  cost_ = GOOGLE_ULONGLONG(0);
  flags_ = GOOGLE_ULONGLONG(0);
  strategy_ = NULL;
  expiration_period_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControlParametersTypes_ControlParameters::~ControlParametersTypes_ControlParameters() {
  SharedDtor();
}

void ControlParametersTypes_ControlParameters::SharedDtor() {
  if (uri_ != &::google::protobuf::internal::kEmptyString) {
    delete uri_;
  }
  if (this != default_instance_) {
    delete name_;
    delete strategy_;
  }
}

void ControlParametersTypes_ControlParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlParametersTypes_ControlParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlParametersTypes_ControlParameters_descriptor_;
}

const ControlParametersTypes_ControlParameters& ControlParametersTypes_ControlParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_control_2dparameters_2eproto();
  return *default_instance_;
}

ControlParametersTypes_ControlParameters* ControlParametersTypes_ControlParameters::default_instance_ = NULL;

ControlParametersTypes_ControlParameters* ControlParametersTypes_ControlParameters::New() const {
  return new ControlParametersTypes_ControlParameters;
}

void ControlParametersTypes_ControlParameters::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != NULL) name_->::ndn_message::ControlParametersTypes_Name::Clear();
    }
    face_id_ = GOOGLE_ULONGLONG(0);
    if (has_uri()) {
      if (uri_ != &::google::protobuf::internal::kEmptyString) {
        uri_->clear();
      }
    }
    local_control_feature_ = GOOGLE_ULONGLONG(0);
    origin_ = GOOGLE_ULONGLONG(0);
    cost_ = GOOGLE_ULONGLONG(0);
    flags_ = GOOGLE_ULONGLONG(0);
    if (has_strategy()) {
      if (strategy_ != NULL) strategy_->::ndn_message::ControlParametersTypes_Strategy::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    expiration_period_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ControlParametersTypes_ControlParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ndn_message.ControlParametersTypes.Name name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(840)) goto parse_face_id;
        break;
      }

      // optional uint64 face_id = 105;
      case 105: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_face_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &face_id_)));
          set_has_face_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(848)) goto parse_cost;
        break;
      }

      // optional uint64 cost = 106;
      case 106: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cost_)));
          set_has_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(858)) goto parse_strategy;
        break;
      }

      // optional .ndn_message.ControlParametersTypes.Strategy strategy = 107;
      case 107: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strategy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_strategy()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(864)) goto parse_flags;
        break;
      }

      // optional uint64 flags = 108;
      case 108: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &flags_)));
          set_has_flags();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(872)) goto parse_expiration_period;
        break;
      }

      // optional uint64 expiration_period = 109;
      case 109: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_expiration_period:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expiration_period_)));
          set_has_expiration_period();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(880)) goto parse_local_control_feature;
        break;
      }

      // optional uint64 local_control_feature = 110;
      case 110: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_local_control_feature:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &local_control_feature_)));
          set_has_local_control_feature();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(888)) goto parse_origin;
        break;
      }

      // optional uint64 origin = 111;
      case 111: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_origin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &origin_)));
          set_has_origin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(914)) goto parse_uri;
        break;
      }

      // optional string uri = 114;
      case 114: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uri().data(), this->uri().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ControlParametersTypes_ControlParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ndn_message.ControlParametersTypes.Name name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->name(), output);
  }

  // optional uint64 face_id = 105;
  if (has_face_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(105, this->face_id(), output);
  }

  // optional uint64 cost = 106;
  if (has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(106, this->cost(), output);
  }

  // optional .ndn_message.ControlParametersTypes.Strategy strategy = 107;
  if (has_strategy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107, this->strategy(), output);
  }

  // optional uint64 flags = 108;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(108, this->flags(), output);
  }

  // optional uint64 expiration_period = 109;
  if (has_expiration_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(109, this->expiration_period(), output);
  }

  // optional uint64 local_control_feature = 110;
  if (has_local_control_feature()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(110, this->local_control_feature(), output);
  }

  // optional uint64 origin = 111;
  if (has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(111, this->origin(), output);
  }

  // optional string uri = 114;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uri().data(), this->uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      114, this->uri(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ControlParametersTypes_ControlParameters::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ndn_message.ControlParametersTypes.Name name = 7;
  if (has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->name(), target);
  }

  // optional uint64 face_id = 105;
  if (has_face_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(105, this->face_id(), target);
  }

  // optional uint64 cost = 106;
  if (has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(106, this->cost(), target);
  }

  // optional .ndn_message.ControlParametersTypes.Strategy strategy = 107;
  if (has_strategy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        107, this->strategy(), target);
  }

  // optional uint64 flags = 108;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(108, this->flags(), target);
  }

  // optional uint64 expiration_period = 109;
  if (has_expiration_period()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(109, this->expiration_period(), target);
  }

  // optional uint64 local_control_feature = 110;
  if (has_local_control_feature()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(110, this->local_control_feature(), target);
  }

  // optional uint64 origin = 111;
  if (has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(111, this->origin(), target);
  }

  // optional string uri = 114;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uri().data(), this->uri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        114, this->uri(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ControlParametersTypes_ControlParameters::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ndn_message.ControlParametersTypes.Name name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->name());
    }

    // optional uint64 face_id = 105;
    if (has_face_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->face_id());
    }

    // optional string uri = 114;
    if (has_uri()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri());
    }

    // optional uint64 local_control_feature = 110;
    if (has_local_control_feature()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->local_control_feature());
    }

    // optional uint64 origin = 111;
    if (has_origin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->origin());
    }

    // optional uint64 cost = 106;
    if (has_cost()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cost());
    }

    // optional uint64 flags = 108;
    if (has_flags()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->flags());
    }

    // optional .ndn_message.ControlParametersTypes.Strategy strategy = 107;
    if (has_strategy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->strategy());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint64 expiration_period = 109;
    if (has_expiration_period()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->expiration_period());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlParametersTypes_ControlParameters::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ControlParametersTypes_ControlParameters* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ControlParametersTypes_ControlParameters*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ControlParametersTypes_ControlParameters::MergeFrom(const ControlParametersTypes_ControlParameters& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      mutable_name()->::ndn_message::ControlParametersTypes_Name::MergeFrom(from.name());
    }
    if (from.has_face_id()) {
      set_face_id(from.face_id());
    }
    if (from.has_uri()) {
      set_uri(from.uri());
    }
    if (from.has_local_control_feature()) {
      set_local_control_feature(from.local_control_feature());
    }
    if (from.has_origin()) {
      set_origin(from.origin());
    }
    if (from.has_cost()) {
      set_cost(from.cost());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
    if (from.has_strategy()) {
      mutable_strategy()->::ndn_message::ControlParametersTypes_Strategy::MergeFrom(from.strategy());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_expiration_period()) {
      set_expiration_period(from.expiration_period());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ControlParametersTypes_ControlParameters::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlParametersTypes_ControlParameters::CopyFrom(const ControlParametersTypes_ControlParameters& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlParametersTypes_ControlParameters::IsInitialized() const {

  if (has_strategy()) {
    if (!this->strategy().IsInitialized()) return false;
  }
  return true;
}

void ControlParametersTypes_ControlParameters::Swap(ControlParametersTypes_ControlParameters* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(face_id_, other->face_id_);
    std::swap(uri_, other->uri_);
    std::swap(local_control_feature_, other->local_control_feature_);
    std::swap(origin_, other->origin_);
    std::swap(cost_, other->cost_);
    std::swap(flags_, other->flags_);
    std::swap(strategy_, other->strategy_);
    std::swap(expiration_period_, other->expiration_period_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ControlParametersTypes_ControlParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlParametersTypes_ControlParameters_descriptor_;
  metadata.reflection = ControlParametersTypes_ControlParameters_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ControlParametersTypes_ControlParametersResponse::kStatusCodeFieldNumber;
const int ControlParametersTypes_ControlParametersResponse::kStatusTextFieldNumber;
const int ControlParametersTypes_ControlParametersResponse::kControlParametersFieldNumber;
#endif  // !_MSC_VER

ControlParametersTypes_ControlParametersResponse::ControlParametersTypes_ControlParametersResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ControlParametersTypes_ControlParametersResponse::InitAsDefaultInstance() {
}

ControlParametersTypes_ControlParametersResponse::ControlParametersTypes_ControlParametersResponse(const ControlParametersTypes_ControlParametersResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ControlParametersTypes_ControlParametersResponse::SharedCtor() {
  _cached_size_ = 0;
  status_code_ = GOOGLE_ULONGLONG(0);
  status_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControlParametersTypes_ControlParametersResponse::~ControlParametersTypes_ControlParametersResponse() {
  SharedDtor();
}

void ControlParametersTypes_ControlParametersResponse::SharedDtor() {
  if (status_text_ != &::google::protobuf::internal::kEmptyString) {
    delete status_text_;
  }
  if (this != default_instance_) {
  }
}

void ControlParametersTypes_ControlParametersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlParametersTypes_ControlParametersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlParametersTypes_ControlParametersResponse_descriptor_;
}

const ControlParametersTypes_ControlParametersResponse& ControlParametersTypes_ControlParametersResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_control_2dparameters_2eproto();
  return *default_instance_;
}

ControlParametersTypes_ControlParametersResponse* ControlParametersTypes_ControlParametersResponse::default_instance_ = NULL;

ControlParametersTypes_ControlParametersResponse* ControlParametersTypes_ControlParametersResponse::New() const {
  return new ControlParametersTypes_ControlParametersResponse;
}

void ControlParametersTypes_ControlParametersResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_code_ = GOOGLE_ULONGLONG(0);
    if (has_status_text()) {
      if (status_text_ != &::google::protobuf::internal::kEmptyString) {
        status_text_->clear();
      }
    }
  }
  control_parameters_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ControlParametersTypes_ControlParametersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 status_code = 102;
      case 102: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &status_code_)));
          set_has_status_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(826)) goto parse_status_text;
        break;
      }

      // required string status_text = 103;
      case 103: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_status_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->status_text().data(), this->status_text().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(834)) goto parse_control_parameters;
        break;
      }

      // repeated .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
      case 104: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_control_parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_control_parameters()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(834)) goto parse_control_parameters;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ControlParametersTypes_ControlParametersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 status_code = 102;
  if (has_status_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(102, this->status_code(), output);
  }

  // required string status_text = 103;
  if (has_status_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->status_text().data(), this->status_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      103, this->status_text(), output);
  }

  // repeated .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
  for (int i = 0; i < this->control_parameters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, this->control_parameters(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ControlParametersTypes_ControlParametersResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 status_code = 102;
  if (has_status_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(102, this->status_code(), target);
  }

  // required string status_text = 103;
  if (has_status_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->status_text().data(), this->status_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        103, this->status_text(), target);
  }

  // repeated .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
  for (int i = 0; i < this->control_parameters_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        104, this->control_parameters(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ControlParametersTypes_ControlParametersResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 status_code = 102;
    if (has_status_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->status_code());
    }

    // required string status_text = 103;
    if (has_status_text()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status_text());
    }

  }
  // repeated .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
  total_size += 2 * this->control_parameters_size();
  for (int i = 0; i < this->control_parameters_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->control_parameters(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlParametersTypes_ControlParametersResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ControlParametersTypes_ControlParametersResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ControlParametersTypes_ControlParametersResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ControlParametersTypes_ControlParametersResponse::MergeFrom(const ControlParametersTypes_ControlParametersResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  control_parameters_.MergeFrom(from.control_parameters_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status_code()) {
      set_status_code(from.status_code());
    }
    if (from.has_status_text()) {
      set_status_text(from.status_text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ControlParametersTypes_ControlParametersResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlParametersTypes_ControlParametersResponse::CopyFrom(const ControlParametersTypes_ControlParametersResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlParametersTypes_ControlParametersResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  for (int i = 0; i < control_parameters_size(); i++) {
    if (!this->control_parameters(i).IsInitialized()) return false;
  }
  return true;
}

void ControlParametersTypes_ControlParametersResponse::Swap(ControlParametersTypes_ControlParametersResponse* other) {
  if (other != this) {
    std::swap(status_code_, other->status_code_);
    std::swap(status_text_, other->status_text_);
    control_parameters_.Swap(&other->control_parameters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ControlParametersTypes_ControlParametersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlParametersTypes_ControlParametersResponse_descriptor_;
  metadata.reflection = ControlParametersTypes_ControlParametersResponse_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ControlParametersTypes_ControlParametersMessage::kControlParametersFieldNumber;
#endif  // !_MSC_VER

ControlParametersTypes_ControlParametersMessage::ControlParametersTypes_ControlParametersMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ControlParametersTypes_ControlParametersMessage::InitAsDefaultInstance() {
  control_parameters_ = const_cast< ::ndn_message::ControlParametersTypes_ControlParameters*>(&::ndn_message::ControlParametersTypes_ControlParameters::default_instance());
}

ControlParametersTypes_ControlParametersMessage::ControlParametersTypes_ControlParametersMessage(const ControlParametersTypes_ControlParametersMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ControlParametersTypes_ControlParametersMessage::SharedCtor() {
  _cached_size_ = 0;
  control_parameters_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControlParametersTypes_ControlParametersMessage::~ControlParametersTypes_ControlParametersMessage() {
  SharedDtor();
}

void ControlParametersTypes_ControlParametersMessage::SharedDtor() {
  if (this != default_instance_) {
    delete control_parameters_;
  }
}

void ControlParametersTypes_ControlParametersMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlParametersTypes_ControlParametersMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlParametersTypes_ControlParametersMessage_descriptor_;
}

const ControlParametersTypes_ControlParametersMessage& ControlParametersTypes_ControlParametersMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_control_2dparameters_2eproto();
  return *default_instance_;
}

ControlParametersTypes_ControlParametersMessage* ControlParametersTypes_ControlParametersMessage::default_instance_ = NULL;

ControlParametersTypes_ControlParametersMessage* ControlParametersTypes_ControlParametersMessage::New() const {
  return new ControlParametersTypes_ControlParametersMessage;
}

void ControlParametersTypes_ControlParametersMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_control_parameters()) {
      if (control_parameters_ != NULL) control_parameters_->::ndn_message::ControlParametersTypes_ControlParameters::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ControlParametersTypes_ControlParametersMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
      case 104: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_control_parameters()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ControlParametersTypes_ControlParametersMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
  if (has_control_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, this->control_parameters(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ControlParametersTypes_ControlParametersMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
  if (has_control_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        104, this->control_parameters(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ControlParametersTypes_ControlParametersMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ndn_message.ControlParametersTypes.ControlParameters control_parameters = 104;
    if (has_control_parameters()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_parameters());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlParametersTypes_ControlParametersMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ControlParametersTypes_ControlParametersMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ControlParametersTypes_ControlParametersMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ControlParametersTypes_ControlParametersMessage::MergeFrom(const ControlParametersTypes_ControlParametersMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_control_parameters()) {
      mutable_control_parameters()->::ndn_message::ControlParametersTypes_ControlParameters::MergeFrom(from.control_parameters());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ControlParametersTypes_ControlParametersMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlParametersTypes_ControlParametersMessage::CopyFrom(const ControlParametersTypes_ControlParametersMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlParametersTypes_ControlParametersMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_control_parameters()) {
    if (!this->control_parameters().IsInitialized()) return false;
  }
  return true;
}

void ControlParametersTypes_ControlParametersMessage::Swap(ControlParametersTypes_ControlParametersMessage* other) {
  if (other != this) {
    std::swap(control_parameters_, other->control_parameters_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ControlParametersTypes_ControlParametersMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlParametersTypes_ControlParametersMessage_descriptor_;
  metadata.reflection = ControlParametersTypes_ControlParametersMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ControlParametersTypes_ControlParametersResponseMessage::kControlResponseFieldNumber;
#endif  // !_MSC_VER

ControlParametersTypes_ControlParametersResponseMessage::ControlParametersTypes_ControlParametersResponseMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ControlParametersTypes_ControlParametersResponseMessage::InitAsDefaultInstance() {
  control_response_ = const_cast< ::ndn_message::ControlParametersTypes_ControlParametersResponse*>(&::ndn_message::ControlParametersTypes_ControlParametersResponse::default_instance());
}

ControlParametersTypes_ControlParametersResponseMessage::ControlParametersTypes_ControlParametersResponseMessage(const ControlParametersTypes_ControlParametersResponseMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ControlParametersTypes_ControlParametersResponseMessage::SharedCtor() {
  _cached_size_ = 0;
  control_response_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControlParametersTypes_ControlParametersResponseMessage::~ControlParametersTypes_ControlParametersResponseMessage() {
  SharedDtor();
}

void ControlParametersTypes_ControlParametersResponseMessage::SharedDtor() {
  if (this != default_instance_) {
    delete control_response_;
  }
}

void ControlParametersTypes_ControlParametersResponseMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlParametersTypes_ControlParametersResponseMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlParametersTypes_ControlParametersResponseMessage_descriptor_;
}

const ControlParametersTypes_ControlParametersResponseMessage& ControlParametersTypes_ControlParametersResponseMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_control_2dparameters_2eproto();
  return *default_instance_;
}

ControlParametersTypes_ControlParametersResponseMessage* ControlParametersTypes_ControlParametersResponseMessage::default_instance_ = NULL;

ControlParametersTypes_ControlParametersResponseMessage* ControlParametersTypes_ControlParametersResponseMessage::New() const {
  return new ControlParametersTypes_ControlParametersResponseMessage;
}

void ControlParametersTypes_ControlParametersResponseMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_control_response()) {
      if (control_response_ != NULL) control_response_->::ndn_message::ControlParametersTypes_ControlParametersResponse::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ControlParametersTypes_ControlParametersResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ndn_message.ControlParametersTypes.ControlParametersResponse control_response = 101;
      case 101: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_control_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ControlParametersTypes_ControlParametersResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .ndn_message.ControlParametersTypes.ControlParametersResponse control_response = 101;
  if (has_control_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, this->control_response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ControlParametersTypes_ControlParametersResponseMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .ndn_message.ControlParametersTypes.ControlParametersResponse control_response = 101;
  if (has_control_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        101, this->control_response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ControlParametersTypes_ControlParametersResponseMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .ndn_message.ControlParametersTypes.ControlParametersResponse control_response = 101;
    if (has_control_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->control_response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlParametersTypes_ControlParametersResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ControlParametersTypes_ControlParametersResponseMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ControlParametersTypes_ControlParametersResponseMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ControlParametersTypes_ControlParametersResponseMessage::MergeFrom(const ControlParametersTypes_ControlParametersResponseMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_control_response()) {
      mutable_control_response()->::ndn_message::ControlParametersTypes_ControlParametersResponse::MergeFrom(from.control_response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ControlParametersTypes_ControlParametersResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlParametersTypes_ControlParametersResponseMessage::CopyFrom(const ControlParametersTypes_ControlParametersResponseMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlParametersTypes_ControlParametersResponseMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_control_response()) {
    if (!this->control_response().IsInitialized()) return false;
  }
  return true;
}

void ControlParametersTypes_ControlParametersResponseMessage::Swap(ControlParametersTypes_ControlParametersResponseMessage* other) {
  if (other != this) {
    std::swap(control_response_, other->control_response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ControlParametersTypes_ControlParametersResponseMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlParametersTypes_ControlParametersResponseMessage_descriptor_;
  metadata.reflection = ControlParametersTypes_ControlParametersResponseMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

ControlParametersTypes::ControlParametersTypes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ControlParametersTypes::InitAsDefaultInstance() {
}

ControlParametersTypes::ControlParametersTypes(const ControlParametersTypes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ControlParametersTypes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControlParametersTypes::~ControlParametersTypes() {
  SharedDtor();
}

void ControlParametersTypes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ControlParametersTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlParametersTypes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlParametersTypes_descriptor_;
}

const ControlParametersTypes& ControlParametersTypes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_control_2dparameters_2eproto();
  return *default_instance_;
}

ControlParametersTypes* ControlParametersTypes::default_instance_ = NULL;

ControlParametersTypes* ControlParametersTypes::New() const {
  return new ControlParametersTypes;
}

void ControlParametersTypes::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ControlParametersTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ControlParametersTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ControlParametersTypes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ControlParametersTypes::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlParametersTypes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ControlParametersTypes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ControlParametersTypes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ControlParametersTypes::MergeFrom(const ControlParametersTypes& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ControlParametersTypes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlParametersTypes::CopyFrom(const ControlParametersTypes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlParametersTypes::IsInitialized() const {

  return true;
}

void ControlParametersTypes::Swap(ControlParametersTypes* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ControlParametersTypes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlParametersTypes_descriptor_;
  metadata.reflection = ControlParametersTypes_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

// @@protoc_insertion_point(global_scope)

#endif // NDN_CPP_HAVE_PROTOBUF
