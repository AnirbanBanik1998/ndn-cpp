// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fib-entry.proto

#ifndef PROTOBUF_fib_2dentry_2eproto__INCLUDED
#define PROTOBUF_fib_2dentry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>
// For backwards compatibility with system that install an older Protobuf (e.g. Ubuntu)),
//   include the older output from protoc so that the sample program compiles.
#if GOOGLE_PROTOBUF_VERSION < 2005000

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_fib_2dentry_2eproto();
void protobuf_AssignDesc_fib_2dentry_2eproto();
void protobuf_ShutdownFile_fib_2dentry_2eproto();

class FibEntryMessage;
class FibEntryMessage_Name;
class FibEntryMessage_NextHopRecord;
class FibEntryMessage_FibEntry;

// ===================================================================

class FibEntryMessage_Name : public ::google::protobuf::Message {
 public:
  FibEntryMessage_Name();
  virtual ~FibEntryMessage_Name();
  
  FibEntryMessage_Name(const FibEntryMessage_Name& from);
  
  inline FibEntryMessage_Name& operator=(const FibEntryMessage_Name& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FibEntryMessage_Name& default_instance();
  
  void Swap(FibEntryMessage_Name* other);
  
  // implements Message ----------------------------------------------
  
  FibEntryMessage_Name* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FibEntryMessage_Name& from);
  void MergeFrom(const FibEntryMessage_Name& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated bytes component = 8;
  inline int component_size() const;
  inline void clear_component();
  static const int kComponentFieldNumber = 8;
  inline const ::std::string& component(int index) const;
  inline ::std::string* mutable_component(int index);
  inline void set_component(int index, const ::std::string& value);
  inline void set_component(int index, const char* value);
  inline void set_component(int index, const void* value, size_t size);
  inline ::std::string* add_component();
  inline void add_component(const ::std::string& value);
  inline void add_component(const char* value);
  inline void add_component(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& component() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_component();
  
  // @@protoc_insertion_point(class_scope:ndn_message.FibEntryMessage.Name)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> component_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_fib_2dentry_2eproto();
  friend void protobuf_AssignDesc_fib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_fib_2dentry_2eproto();
  
  void InitAsDefaultInstance();
  static FibEntryMessage_Name* default_instance_;
};
// -------------------------------------------------------------------

class FibEntryMessage_NextHopRecord : public ::google::protobuf::Message {
 public:
  FibEntryMessage_NextHopRecord();
  virtual ~FibEntryMessage_NextHopRecord();
  
  FibEntryMessage_NextHopRecord(const FibEntryMessage_NextHopRecord& from);
  
  inline FibEntryMessage_NextHopRecord& operator=(const FibEntryMessage_NextHopRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FibEntryMessage_NextHopRecord& default_instance();
  
  void Swap(FibEntryMessage_NextHopRecord* other);
  
  // implements Message ----------------------------------------------
  
  FibEntryMessage_NextHopRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FibEntryMessage_NextHopRecord& from);
  void MergeFrom(const FibEntryMessage_NextHopRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 face_id = 105;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 105;
  inline ::google::protobuf::uint32 face_id() const;
  inline void set_face_id(::google::protobuf::uint32 value);
  
  // required uint32 cost = 106;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 106;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ndn_message.FibEntryMessage.NextHopRecord)
 private:
  inline void set_has_face_id();
  inline void clear_has_face_id();
  inline void set_has_cost();
  inline void clear_has_cost();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 face_id_;
  ::google::protobuf::uint32 cost_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_fib_2dentry_2eproto();
  friend void protobuf_AssignDesc_fib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_fib_2dentry_2eproto();
  
  void InitAsDefaultInstance();
  static FibEntryMessage_NextHopRecord* default_instance_;
};
// -------------------------------------------------------------------

class FibEntryMessage_FibEntry : public ::google::protobuf::Message {
 public:
  FibEntryMessage_FibEntry();
  virtual ~FibEntryMessage_FibEntry();
  
  FibEntryMessage_FibEntry(const FibEntryMessage_FibEntry& from);
  
  inline FibEntryMessage_FibEntry& operator=(const FibEntryMessage_FibEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FibEntryMessage_FibEntry& default_instance();
  
  void Swap(FibEntryMessage_FibEntry* other);
  
  // implements Message ----------------------------------------------
  
  FibEntryMessage_FibEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FibEntryMessage_FibEntry& from);
  void MergeFrom(const FibEntryMessage_FibEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .ndn_message.FibEntryMessage.Name name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::ndn_message::FibEntryMessage_Name& name() const;
  inline ::ndn_message::FibEntryMessage_Name* mutable_name();
  inline ::ndn_message::FibEntryMessage_Name* release_name();
  
  // repeated .ndn_message.FibEntryMessage.NextHopRecord next_hop_records = 129;
  inline int next_hop_records_size() const;
  inline void clear_next_hop_records();
  static const int kNextHopRecordsFieldNumber = 129;
  inline const ::ndn_message::FibEntryMessage_NextHopRecord& next_hop_records(int index) const;
  inline ::ndn_message::FibEntryMessage_NextHopRecord* mutable_next_hop_records(int index);
  inline ::ndn_message::FibEntryMessage_NextHopRecord* add_next_hop_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord >&
      next_hop_records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord >*
      mutable_next_hop_records();
  
  // @@protoc_insertion_point(class_scope:ndn_message.FibEntryMessage.FibEntry)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ndn_message::FibEntryMessage_Name* name_;
  ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord > next_hop_records_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_fib_2dentry_2eproto();
  friend void protobuf_AssignDesc_fib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_fib_2dentry_2eproto();
  
  void InitAsDefaultInstance();
  static FibEntryMessage_FibEntry* default_instance_;
};
// -------------------------------------------------------------------

class FibEntryMessage : public ::google::protobuf::Message {
 public:
  FibEntryMessage();
  virtual ~FibEntryMessage();
  
  FibEntryMessage(const FibEntryMessage& from);
  
  inline FibEntryMessage& operator=(const FibEntryMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FibEntryMessage& default_instance();
  
  void Swap(FibEntryMessage* other);
  
  // implements Message ----------------------------------------------
  
  FibEntryMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FibEntryMessage& from);
  void MergeFrom(const FibEntryMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef FibEntryMessage_Name Name;
  typedef FibEntryMessage_NextHopRecord NextHopRecord;
  typedef FibEntryMessage_FibEntry FibEntry;
  
  // accessors -------------------------------------------------------
  
  // required .ndn_message.FibEntryMessage.FibEntry fib_entry = 128;
  inline bool has_fib_entry() const;
  inline void clear_fib_entry();
  static const int kFibEntryFieldNumber = 128;
  inline const ::ndn_message::FibEntryMessage_FibEntry& fib_entry() const;
  inline ::ndn_message::FibEntryMessage_FibEntry* mutable_fib_entry();
  inline ::ndn_message::FibEntryMessage_FibEntry* release_fib_entry();
  
  // @@protoc_insertion_point(class_scope:ndn_message.FibEntryMessage)
 private:
  inline void set_has_fib_entry();
  inline void clear_has_fib_entry();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ndn_message::FibEntryMessage_FibEntry* fib_entry_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_fib_2dentry_2eproto();
  friend void protobuf_AssignDesc_fib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_fib_2dentry_2eproto();
  
  void InitAsDefaultInstance();
  static FibEntryMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// FibEntryMessage_Name

// repeated bytes component = 8;
inline int FibEntryMessage_Name::component_size() const {
  return component_.size();
}
inline void FibEntryMessage_Name::clear_component() {
  component_.Clear();
}
inline const ::std::string& FibEntryMessage_Name::component(int index) const {
  return component_.Get(index);
}
inline ::std::string* FibEntryMessage_Name::mutable_component(int index) {
  return component_.Mutable(index);
}
inline void FibEntryMessage_Name::set_component(int index, const ::std::string& value) {
  component_.Mutable(index)->assign(value);
}
inline void FibEntryMessage_Name::set_component(int index, const char* value) {
  component_.Mutable(index)->assign(value);
}
inline void FibEntryMessage_Name::set_component(int index, const void* value, size_t size) {
  component_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FibEntryMessage_Name::add_component() {
  return component_.Add();
}
inline void FibEntryMessage_Name::add_component(const ::std::string& value) {
  component_.Add()->assign(value);
}
inline void FibEntryMessage_Name::add_component(const char* value) {
  component_.Add()->assign(value);
}
inline void FibEntryMessage_Name::add_component(const void* value, size_t size) {
  component_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FibEntryMessage_Name::component() const {
  return component_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FibEntryMessage_Name::mutable_component() {
  return &component_;
}

// -------------------------------------------------------------------

// FibEntryMessage_NextHopRecord

// required uint32 face_id = 105;
inline bool FibEntryMessage_NextHopRecord::has_face_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FibEntryMessage_NextHopRecord::set_has_face_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FibEntryMessage_NextHopRecord::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FibEntryMessage_NextHopRecord::clear_face_id() {
  face_id_ = 0u;
  clear_has_face_id();
}
inline ::google::protobuf::uint32 FibEntryMessage_NextHopRecord::face_id() const {
  return face_id_;
}
inline void FibEntryMessage_NextHopRecord::set_face_id(::google::protobuf::uint32 value) {
  set_has_face_id();
  face_id_ = value;
}

// required uint32 cost = 106;
inline bool FibEntryMessage_NextHopRecord::has_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FibEntryMessage_NextHopRecord::set_has_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FibEntryMessage_NextHopRecord::clear_has_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FibEntryMessage_NextHopRecord::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 FibEntryMessage_NextHopRecord::cost() const {
  return cost_;
}
inline void FibEntryMessage_NextHopRecord::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
}

// -------------------------------------------------------------------

// FibEntryMessage_FibEntry

// required .ndn_message.FibEntryMessage.Name name = 7;
inline bool FibEntryMessage_FibEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FibEntryMessage_FibEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FibEntryMessage_FibEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FibEntryMessage_FibEntry::clear_name() {
  if (name_ != NULL) name_->::ndn_message::FibEntryMessage_Name::Clear();
  clear_has_name();
}
inline const ::ndn_message::FibEntryMessage_Name& FibEntryMessage_FibEntry::name() const {
  return name_ != NULL ? *name_ : *default_instance_->name_;
}
inline ::ndn_message::FibEntryMessage_Name* FibEntryMessage_FibEntry::mutable_name() {
  set_has_name();
  if (name_ == NULL) name_ = new ::ndn_message::FibEntryMessage_Name;
  return name_;
}
inline ::ndn_message::FibEntryMessage_Name* FibEntryMessage_FibEntry::release_name() {
  clear_has_name();
  ::ndn_message::FibEntryMessage_Name* temp = name_;
  name_ = NULL;
  return temp;
}

// repeated .ndn_message.FibEntryMessage.NextHopRecord next_hop_records = 129;
inline int FibEntryMessage_FibEntry::next_hop_records_size() const {
  return next_hop_records_.size();
}
inline void FibEntryMessage_FibEntry::clear_next_hop_records() {
  next_hop_records_.Clear();
}
inline const ::ndn_message::FibEntryMessage_NextHopRecord& FibEntryMessage_FibEntry::next_hop_records(int index) const {
  return next_hop_records_.Get(index);
}
inline ::ndn_message::FibEntryMessage_NextHopRecord* FibEntryMessage_FibEntry::mutable_next_hop_records(int index) {
  return next_hop_records_.Mutable(index);
}
inline ::ndn_message::FibEntryMessage_NextHopRecord* FibEntryMessage_FibEntry::add_next_hop_records() {
  return next_hop_records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord >&
FibEntryMessage_FibEntry::next_hop_records() const {
  return next_hop_records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord >*
FibEntryMessage_FibEntry::mutable_next_hop_records() {
  return &next_hop_records_;
}

// -------------------------------------------------------------------

// FibEntryMessage

// required .ndn_message.FibEntryMessage.FibEntry fib_entry = 128;
inline bool FibEntryMessage::has_fib_entry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FibEntryMessage::set_has_fib_entry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FibEntryMessage::clear_has_fib_entry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FibEntryMessage::clear_fib_entry() {
  if (fib_entry_ != NULL) fib_entry_->::ndn_message::FibEntryMessage_FibEntry::Clear();
  clear_has_fib_entry();
}
inline const ::ndn_message::FibEntryMessage_FibEntry& FibEntryMessage::fib_entry() const {
  return fib_entry_ != NULL ? *fib_entry_ : *default_instance_->fib_entry_;
}
inline ::ndn_message::FibEntryMessage_FibEntry* FibEntryMessage::mutable_fib_entry() {
  set_has_fib_entry();
  if (fib_entry_ == NULL) fib_entry_ = new ::ndn_message::FibEntryMessage_FibEntry;
  return fib_entry_;
}
inline ::ndn_message::FibEntryMessage_FibEntry* FibEntryMessage::release_fib_entry() {
  clear_has_fib_entry();
  ::ndn_message::FibEntryMessage_FibEntry* temp = fib_entry_;
  fib_entry_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#else // GOOGLE_PROTOBUF_VERSION < 2005000

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_fib_2dentry_2eproto();
void protobuf_AssignDesc_fib_2dentry_2eproto();
void protobuf_ShutdownFile_fib_2dentry_2eproto();

class FibEntryMessage;
class FibEntryMessage_Name;
class FibEntryMessage_NextHopRecord;
class FibEntryMessage_FibEntry;

// ===================================================================

class FibEntryMessage_Name : public ::google::protobuf::Message {
 public:
  FibEntryMessage_Name();
  virtual ~FibEntryMessage_Name();

  FibEntryMessage_Name(const FibEntryMessage_Name& from);

  inline FibEntryMessage_Name& operator=(const FibEntryMessage_Name& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FibEntryMessage_Name& default_instance();

  void Swap(FibEntryMessage_Name* other);

  // implements Message ----------------------------------------------

  FibEntryMessage_Name* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FibEntryMessage_Name& from);
  void MergeFrom(const FibEntryMessage_Name& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes component = 8;
  inline int component_size() const;
  inline void clear_component();
  static const int kComponentFieldNumber = 8;
  inline const ::std::string& component(int index) const;
  inline ::std::string* mutable_component(int index);
  inline void set_component(int index, const ::std::string& value);
  inline void set_component(int index, const char* value);
  inline void set_component(int index, const void* value, size_t size);
  inline ::std::string* add_component();
  inline void add_component(const ::std::string& value);
  inline void add_component(const char* value);
  inline void add_component(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& component() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_component();

  // @@protoc_insertion_point(class_scope:ndn_message.FibEntryMessage.Name)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> component_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_fib_2dentry_2eproto();
  friend void protobuf_AssignDesc_fib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_fib_2dentry_2eproto();

  void InitAsDefaultInstance();
  static FibEntryMessage_Name* default_instance_;
};
// -------------------------------------------------------------------

class FibEntryMessage_NextHopRecord : public ::google::protobuf::Message {
 public:
  FibEntryMessage_NextHopRecord();
  virtual ~FibEntryMessage_NextHopRecord();

  FibEntryMessage_NextHopRecord(const FibEntryMessage_NextHopRecord& from);

  inline FibEntryMessage_NextHopRecord& operator=(const FibEntryMessage_NextHopRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FibEntryMessage_NextHopRecord& default_instance();

  void Swap(FibEntryMessage_NextHopRecord* other);

  // implements Message ----------------------------------------------

  FibEntryMessage_NextHopRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FibEntryMessage_NextHopRecord& from);
  void MergeFrom(const FibEntryMessage_NextHopRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 face_id = 105;
  inline bool has_face_id() const;
  inline void clear_face_id();
  static const int kFaceIdFieldNumber = 105;
  inline ::google::protobuf::uint32 face_id() const;
  inline void set_face_id(::google::protobuf::uint32 value);

  // required uint32 cost = 106;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 106;
  inline ::google::protobuf::uint32 cost() const;
  inline void set_cost(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ndn_message.FibEntryMessage.NextHopRecord)
 private:
  inline void set_has_face_id();
  inline void clear_has_face_id();
  inline void set_has_cost();
  inline void clear_has_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 face_id_;
  ::google::protobuf::uint32 cost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fib_2dentry_2eproto();
  friend void protobuf_AssignDesc_fib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_fib_2dentry_2eproto();

  void InitAsDefaultInstance();
  static FibEntryMessage_NextHopRecord* default_instance_;
};
// -------------------------------------------------------------------

class FibEntryMessage_FibEntry : public ::google::protobuf::Message {
 public:
  FibEntryMessage_FibEntry();
  virtual ~FibEntryMessage_FibEntry();

  FibEntryMessage_FibEntry(const FibEntryMessage_FibEntry& from);

  inline FibEntryMessage_FibEntry& operator=(const FibEntryMessage_FibEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FibEntryMessage_FibEntry& default_instance();

  void Swap(FibEntryMessage_FibEntry* other);

  // implements Message ----------------------------------------------

  FibEntryMessage_FibEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FibEntryMessage_FibEntry& from);
  void MergeFrom(const FibEntryMessage_FibEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .ndn_message.FibEntryMessage.Name name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::ndn_message::FibEntryMessage_Name& name() const;
  inline ::ndn_message::FibEntryMessage_Name* mutable_name();
  inline ::ndn_message::FibEntryMessage_Name* release_name();
  inline void set_allocated_name(::ndn_message::FibEntryMessage_Name* name);

  // repeated .ndn_message.FibEntryMessage.NextHopRecord next_hop_records = 129;
  inline int next_hop_records_size() const;
  inline void clear_next_hop_records();
  static const int kNextHopRecordsFieldNumber = 129;
  inline const ::ndn_message::FibEntryMessage_NextHopRecord& next_hop_records(int index) const;
  inline ::ndn_message::FibEntryMessage_NextHopRecord* mutable_next_hop_records(int index);
  inline ::ndn_message::FibEntryMessage_NextHopRecord* add_next_hop_records();
  inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord >&
      next_hop_records() const;
  inline ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord >*
      mutable_next_hop_records();

  // @@protoc_insertion_point(class_scope:ndn_message.FibEntryMessage.FibEntry)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ndn_message::FibEntryMessage_Name* name_;
  ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord > next_hop_records_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_fib_2dentry_2eproto();
  friend void protobuf_AssignDesc_fib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_fib_2dentry_2eproto();

  void InitAsDefaultInstance();
  static FibEntryMessage_FibEntry* default_instance_;
};
// -------------------------------------------------------------------

class FibEntryMessage : public ::google::protobuf::Message {
 public:
  FibEntryMessage();
  virtual ~FibEntryMessage();

  FibEntryMessage(const FibEntryMessage& from);

  inline FibEntryMessage& operator=(const FibEntryMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FibEntryMessage& default_instance();

  void Swap(FibEntryMessage* other);

  // implements Message ----------------------------------------------

  FibEntryMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FibEntryMessage& from);
  void MergeFrom(const FibEntryMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FibEntryMessage_Name Name;
  typedef FibEntryMessage_NextHopRecord NextHopRecord;
  typedef FibEntryMessage_FibEntry FibEntry;

  // accessors -------------------------------------------------------

  // required .ndn_message.FibEntryMessage.FibEntry fib_entry = 128;
  inline bool has_fib_entry() const;
  inline void clear_fib_entry();
  static const int kFibEntryFieldNumber = 128;
  inline const ::ndn_message::FibEntryMessage_FibEntry& fib_entry() const;
  inline ::ndn_message::FibEntryMessage_FibEntry* mutable_fib_entry();
  inline ::ndn_message::FibEntryMessage_FibEntry* release_fib_entry();
  inline void set_allocated_fib_entry(::ndn_message::FibEntryMessage_FibEntry* fib_entry);

  // @@protoc_insertion_point(class_scope:ndn_message.FibEntryMessage)
 private:
  inline void set_has_fib_entry();
  inline void clear_has_fib_entry();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ndn_message::FibEntryMessage_FibEntry* fib_entry_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_fib_2dentry_2eproto();
  friend void protobuf_AssignDesc_fib_2dentry_2eproto();
  friend void protobuf_ShutdownFile_fib_2dentry_2eproto();

  void InitAsDefaultInstance();
  static FibEntryMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// FibEntryMessage_Name

// repeated bytes component = 8;
inline int FibEntryMessage_Name::component_size() const {
  return component_.size();
}
inline void FibEntryMessage_Name::clear_component() {
  component_.Clear();
}
inline const ::std::string& FibEntryMessage_Name::component(int index) const {
  return component_.Get(index);
}
inline ::std::string* FibEntryMessage_Name::mutable_component(int index) {
  return component_.Mutable(index);
}
inline void FibEntryMessage_Name::set_component(int index, const ::std::string& value) {
  component_.Mutable(index)->assign(value);
}
inline void FibEntryMessage_Name::set_component(int index, const char* value) {
  component_.Mutable(index)->assign(value);
}
inline void FibEntryMessage_Name::set_component(int index, const void* value, size_t size) {
  component_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FibEntryMessage_Name::add_component() {
  return component_.Add();
}
inline void FibEntryMessage_Name::add_component(const ::std::string& value) {
  component_.Add()->assign(value);
}
inline void FibEntryMessage_Name::add_component(const char* value) {
  component_.Add()->assign(value);
}
inline void FibEntryMessage_Name::add_component(const void* value, size_t size) {
  component_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FibEntryMessage_Name::component() const {
  return component_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FibEntryMessage_Name::mutable_component() {
  return &component_;
}

// -------------------------------------------------------------------

// FibEntryMessage_NextHopRecord

// required uint32 face_id = 105;
inline bool FibEntryMessage_NextHopRecord::has_face_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FibEntryMessage_NextHopRecord::set_has_face_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FibEntryMessage_NextHopRecord::clear_has_face_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FibEntryMessage_NextHopRecord::clear_face_id() {
  face_id_ = 0u;
  clear_has_face_id();
}
inline ::google::protobuf::uint32 FibEntryMessage_NextHopRecord::face_id() const {
  return face_id_;
}
inline void FibEntryMessage_NextHopRecord::set_face_id(::google::protobuf::uint32 value) {
  set_has_face_id();
  face_id_ = value;
}

// required uint32 cost = 106;
inline bool FibEntryMessage_NextHopRecord::has_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FibEntryMessage_NextHopRecord::set_has_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FibEntryMessage_NextHopRecord::clear_has_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FibEntryMessage_NextHopRecord::clear_cost() {
  cost_ = 0u;
  clear_has_cost();
}
inline ::google::protobuf::uint32 FibEntryMessage_NextHopRecord::cost() const {
  return cost_;
}
inline void FibEntryMessage_NextHopRecord::set_cost(::google::protobuf::uint32 value) {
  set_has_cost();
  cost_ = value;
}

// -------------------------------------------------------------------

// FibEntryMessage_FibEntry

// required .ndn_message.FibEntryMessage.Name name = 7;
inline bool FibEntryMessage_FibEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FibEntryMessage_FibEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FibEntryMessage_FibEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FibEntryMessage_FibEntry::clear_name() {
  if (name_ != NULL) name_->::ndn_message::FibEntryMessage_Name::Clear();
  clear_has_name();
}
inline const ::ndn_message::FibEntryMessage_Name& FibEntryMessage_FibEntry::name() const {
  return name_ != NULL ? *name_ : *default_instance_->name_;
}
inline ::ndn_message::FibEntryMessage_Name* FibEntryMessage_FibEntry::mutable_name() {
  set_has_name();
  if (name_ == NULL) name_ = new ::ndn_message::FibEntryMessage_Name;
  return name_;
}
inline ::ndn_message::FibEntryMessage_Name* FibEntryMessage_FibEntry::release_name() {
  clear_has_name();
  ::ndn_message::FibEntryMessage_Name* temp = name_;
  name_ = NULL;
  return temp;
}
inline void FibEntryMessage_FibEntry::set_allocated_name(::ndn_message::FibEntryMessage_Name* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
}

// repeated .ndn_message.FibEntryMessage.NextHopRecord next_hop_records = 129;
inline int FibEntryMessage_FibEntry::next_hop_records_size() const {
  return next_hop_records_.size();
}
inline void FibEntryMessage_FibEntry::clear_next_hop_records() {
  next_hop_records_.Clear();
}
inline const ::ndn_message::FibEntryMessage_NextHopRecord& FibEntryMessage_FibEntry::next_hop_records(int index) const {
  return next_hop_records_.Get(index);
}
inline ::ndn_message::FibEntryMessage_NextHopRecord* FibEntryMessage_FibEntry::mutable_next_hop_records(int index) {
  return next_hop_records_.Mutable(index);
}
inline ::ndn_message::FibEntryMessage_NextHopRecord* FibEntryMessage_FibEntry::add_next_hop_records() {
  return next_hop_records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord >&
FibEntryMessage_FibEntry::next_hop_records() const {
  return next_hop_records_;
}
inline ::google::protobuf::RepeatedPtrField< ::ndn_message::FibEntryMessage_NextHopRecord >*
FibEntryMessage_FibEntry::mutable_next_hop_records() {
  return &next_hop_records_;
}

// -------------------------------------------------------------------

// FibEntryMessage

// required .ndn_message.FibEntryMessage.FibEntry fib_entry = 128;
inline bool FibEntryMessage::has_fib_entry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FibEntryMessage::set_has_fib_entry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FibEntryMessage::clear_has_fib_entry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FibEntryMessage::clear_fib_entry() {
  if (fib_entry_ != NULL) fib_entry_->::ndn_message::FibEntryMessage_FibEntry::Clear();
  clear_has_fib_entry();
}
inline const ::ndn_message::FibEntryMessage_FibEntry& FibEntryMessage::fib_entry() const {
  return fib_entry_ != NULL ? *fib_entry_ : *default_instance_->fib_entry_;
}
inline ::ndn_message::FibEntryMessage_FibEntry* FibEntryMessage::mutable_fib_entry() {
  set_has_fib_entry();
  if (fib_entry_ == NULL) fib_entry_ = new ::ndn_message::FibEntryMessage_FibEntry;
  return fib_entry_;
}
inline ::ndn_message::FibEntryMessage_FibEntry* FibEntryMessage::release_fib_entry() {
  clear_has_fib_entry();
  ::ndn_message::FibEntryMessage_FibEntry* temp = fib_entry_;
  fib_entry_ = NULL;
  return temp;
}
inline void FibEntryMessage::set_allocated_fib_entry(::ndn_message::FibEntryMessage_FibEntry* fib_entry) {
  delete fib_entry_;
  fib_entry_ = fib_entry;
  if (fib_entry) {
    set_has_fib_entry();
  } else {
    clear_has_fib_entry();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif // GOOGLE_PROTOBUF_VERSION < 2005000

#endif  // PROTOBUF_fib_2dentry_2eproto__INCLUDED
