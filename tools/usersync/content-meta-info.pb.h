// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: content-meta-info.proto

#ifndef PROTOBUF_content_2dmeta_2dinfo_2eproto__INCLUDED
#define PROTOBUF_content_2dmeta_2dinfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ndn_message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
void protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto();
void protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto();

class ContentMetaInfoMessage;
class ContentMetaInfoMessage_ContentMetaInfo;

// ===================================================================

class ContentMetaInfoMessage_ContentMetaInfo : public ::google::protobuf::Message {
 public:
  ContentMetaInfoMessage_ContentMetaInfo();
  virtual ~ContentMetaInfoMessage_ContentMetaInfo();

  ContentMetaInfoMessage_ContentMetaInfo(const ContentMetaInfoMessage_ContentMetaInfo& from);

  inline ContentMetaInfoMessage_ContentMetaInfo& operator=(const ContentMetaInfoMessage_ContentMetaInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentMetaInfoMessage_ContentMetaInfo& default_instance();

  void Swap(ContentMetaInfoMessage_ContentMetaInfo* other);

  // implements Message ----------------------------------------------

  ContentMetaInfoMessage_ContentMetaInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContentMetaInfoMessage_ContentMetaInfo& from);
  void MergeFrom(const ContentMetaInfoMessage_ContentMetaInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string content_type = 129;
  inline bool has_content_type() const;
  inline void clear_content_type();
  static const int kContentTypeFieldNumber = 129;
  inline const ::std::string& content_type() const;
  inline void set_content_type(const ::std::string& value);
  inline void set_content_type(const char* value);
  inline void set_content_type(const char* value, size_t size);
  inline ::std::string* mutable_content_type();
  inline ::std::string* release_content_type();
  inline void set_allocated_content_type(::std::string* content_type);

  // required uint64 timestamp = 130;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 130;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // required bool has_segments = 131;
  inline bool has_has_segments() const;
  inline void clear_has_segments();
  static const int kHasSegmentsFieldNumber = 131;
  inline bool has_segments() const;
  inline void set_has_segments(bool value);

  // optional bytes other = 132;
  inline bool has_other() const;
  inline void clear_other();
  static const int kOtherFieldNumber = 132;
  inline const ::std::string& other() const;
  inline void set_other(const ::std::string& value);
  inline void set_other(const char* value);
  inline void set_other(const void* value, size_t size);
  inline ::std::string* mutable_other();
  inline ::std::string* release_other();
  inline void set_allocated_other(::std::string* other);

  // @@protoc_insertion_point(class_scope:ndn_message.ContentMetaInfoMessage.ContentMetaInfo)
 private:
  inline void set_has_content_type();
  inline void clear_has_content_type();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_has_segments();
  inline void clear_has_has_segments();
  inline void set_has_other();
  inline void clear_has_other();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* content_type_;
  ::google::protobuf::uint64 timestamp_;
  ::std::string* other_;
  bool has_segments_;
  friend void  protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  friend void protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto();
  friend void protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto();

  void InitAsDefaultInstance();
  static ContentMetaInfoMessage_ContentMetaInfo* default_instance_;
};
// -------------------------------------------------------------------

class ContentMetaInfoMessage : public ::google::protobuf::Message {
 public:
  ContentMetaInfoMessage();
  virtual ~ContentMetaInfoMessage();

  ContentMetaInfoMessage(const ContentMetaInfoMessage& from);

  inline ContentMetaInfoMessage& operator=(const ContentMetaInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContentMetaInfoMessage& default_instance();

  void Swap(ContentMetaInfoMessage* other);

  // implements Message ----------------------------------------------

  ContentMetaInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ContentMetaInfoMessage& from);
  void MergeFrom(const ContentMetaInfoMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ContentMetaInfoMessage_ContentMetaInfo ContentMetaInfo;

  // accessors -------------------------------------------------------

  // required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
  inline bool has_content_meta_info() const;
  inline void clear_content_meta_info();
  static const int kContentMetaInfoFieldNumber = 128;
  inline const ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo& content_meta_info() const;
  inline ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* mutable_content_meta_info();
  inline ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* release_content_meta_info();
  inline void set_allocated_content_meta_info(::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* content_meta_info);

  // @@protoc_insertion_point(class_scope:ndn_message.ContentMetaInfoMessage)
 private:
  inline void set_has_content_meta_info();
  inline void clear_has_content_meta_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* content_meta_info_;
  friend void  protobuf_AddDesc_content_2dmeta_2dinfo_2eproto();
  friend void protobuf_AssignDesc_content_2dmeta_2dinfo_2eproto();
  friend void protobuf_ShutdownFile_content_2dmeta_2dinfo_2eproto();

  void InitAsDefaultInstance();
  static ContentMetaInfoMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// ContentMetaInfoMessage_ContentMetaInfo

// required string content_type = 129;
inline bool ContentMetaInfoMessage_ContentMetaInfo::has_content_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_has_content_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::clear_has_content_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::clear_content_type() {
  if (content_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_type_->clear();
  }
  clear_has_content_type();
}
inline const ::std::string& ContentMetaInfoMessage_ContentMetaInfo::content_type() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
  return *content_type_;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_content_type(const ::std::string& value) {
  set_has_content_type();
  if (content_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_type_ = new ::std::string;
  }
  content_type_->assign(value);
  // @@protoc_insertion_point(field_set:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_content_type(const char* value) {
  set_has_content_type();
  if (content_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_type_ = new ::std::string;
  }
  content_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_content_type(const char* value, size_t size) {
  set_has_content_type();
  if (content_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_type_ = new ::std::string;
  }
  content_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
}
inline ::std::string* ContentMetaInfoMessage_ContentMetaInfo::mutable_content_type() {
  set_has_content_type();
  if (content_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
  return content_type_;
}
inline ::std::string* ContentMetaInfoMessage_ContentMetaInfo::release_content_type() {
  clear_has_content_type();
  if (content_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_type_;
    content_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_allocated_content_type(::std::string* content_type) {
  if (content_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_type_;
  }
  if (content_type) {
    set_has_content_type();
    content_type_ = content_type;
  } else {
    clear_has_content_type();
    content_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.content_type)
}

// required uint64 timestamp = 130;
inline bool ContentMetaInfoMessage_ContentMetaInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 ContentMetaInfoMessage_ContentMetaInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.timestamp)
  return timestamp_;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.timestamp)
}

// required bool has_segments = 131;
inline bool ContentMetaInfoMessage_ContentMetaInfo::has_has_segments() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_has_has_segments() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::clear_has_has_segments() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::clear_has_segments() {
  has_segments_ = false;
  clear_has_has_segments();
}
inline bool ContentMetaInfoMessage_ContentMetaInfo::has_segments() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.has_segments)
  return has_segments_;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_has_segments(bool value) {
  set_has_has_segments();
  has_segments_ = value;
  // @@protoc_insertion_point(field_set:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.has_segments)
}

// optional bytes other = 132;
inline bool ContentMetaInfoMessage_ContentMetaInfo::has_other() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_has_other() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::clear_has_other() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::clear_other() {
  if (other_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    other_->clear();
  }
  clear_has_other();
}
inline const ::std::string& ContentMetaInfoMessage_ContentMetaInfo::other() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
  return *other_;
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_other(const ::std::string& value) {
  set_has_other();
  if (other_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    other_ = new ::std::string;
  }
  other_->assign(value);
  // @@protoc_insertion_point(field_set:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_other(const char* value) {
  set_has_other();
  if (other_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    other_ = new ::std::string;
  }
  other_->assign(value);
  // @@protoc_insertion_point(field_set_char:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_other(const void* value, size_t size) {
  set_has_other();
  if (other_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    other_ = new ::std::string;
  }
  other_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
}
inline ::std::string* ContentMetaInfoMessage_ContentMetaInfo::mutable_other() {
  set_has_other();
  if (other_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    other_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
  return other_;
}
inline ::std::string* ContentMetaInfoMessage_ContentMetaInfo::release_other() {
  clear_has_other();
  if (other_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = other_;
    other_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ContentMetaInfoMessage_ContentMetaInfo::set_allocated_other(::std::string* other) {
  if (other_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete other_;
  }
  if (other) {
    set_has_other();
    other_ = other;
  } else {
    clear_has_other();
    other_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ContentMetaInfoMessage.ContentMetaInfo.other)
}

// -------------------------------------------------------------------

// ContentMetaInfoMessage

// required .ndn_message.ContentMetaInfoMessage.ContentMetaInfo content_meta_info = 128;
inline bool ContentMetaInfoMessage::has_content_meta_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContentMetaInfoMessage::set_has_content_meta_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContentMetaInfoMessage::clear_has_content_meta_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContentMetaInfoMessage::clear_content_meta_info() {
  if (content_meta_info_ != NULL) content_meta_info_->::ndn_message::ContentMetaInfoMessage_ContentMetaInfo::Clear();
  clear_has_content_meta_info();
}
inline const ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo& ContentMetaInfoMessage::content_meta_info() const {
  // @@protoc_insertion_point(field_get:ndn_message.ContentMetaInfoMessage.content_meta_info)
  return content_meta_info_ != NULL ? *content_meta_info_ : *default_instance_->content_meta_info_;
}
inline ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage::mutable_content_meta_info() {
  set_has_content_meta_info();
  if (content_meta_info_ == NULL) content_meta_info_ = new ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo;
  // @@protoc_insertion_point(field_mutable:ndn_message.ContentMetaInfoMessage.content_meta_info)
  return content_meta_info_;
}
inline ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* ContentMetaInfoMessage::release_content_meta_info() {
  clear_has_content_meta_info();
  ::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* temp = content_meta_info_;
  content_meta_info_ = NULL;
  return temp;
}
inline void ContentMetaInfoMessage::set_allocated_content_meta_info(::ndn_message::ContentMetaInfoMessage_ContentMetaInfo* content_meta_info) {
  delete content_meta_info_;
  content_meta_info_ = content_meta_info;
  if (content_meta_info) {
    set_has_content_meta_info();
  } else {
    clear_has_content_meta_info();
  }
  // @@protoc_insertion_point(field_set_allocated:ndn_message.ContentMetaInfoMessage.content_meta_info)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ndn_message

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_content_2dmeta_2dinfo_2eproto__INCLUDED
